// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package destination

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	ConfigAuthPassword = "auth.password"
	ConfigAuthRealm    = "auth.realm"
	ConfigAuthUsername = "auth.username"
	ConfigDatabase     = "database"
	ConfigEntityLabels = "entityLabels"
	ConfigEntityType   = "entityType"
	ConfigUri          = "uri"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		ConfigAuthPassword: {
			Default:     "",
			Description: "The password to use when performing basic auth.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigAuthRealm: {
			Default:     "",
			Description: "The realm to use when performing basic auth.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigAuthUsername: {
			Default:     "",
			Description: "The username to use when performing basic auth.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigDatabase: {
			Default:     "neo4j",
			Description: "The name of a database the connector should work with.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigEntityLabels: {
			Default:     "",
			Description: "Holds a list of labels belonging to an entity.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigEntityType: {
			Default:     "",
			Description: "Defines an entity type the connector should work with.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
				config.ValidationInclusion{List: []string{"node", "relationship"}},
			},
		},
		ConfigUri: {
			Default:     "",
			Description: "The connection URI pointed to a Neo4j instance.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
	}
}
